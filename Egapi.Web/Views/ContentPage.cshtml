@inherits Umbraco.Web.Mvc.UmbracoViewPage<ContentModels.ContentPage>
@using ContentModels = Umbraco.Web.PublishedModels;
@{
    Layout = "Main.cshtml";
}

@if (Model.HasValue("contentPageTitle") && Model.HasValue("contentPageText") && Model.HasValue("contentPageImages"))
{
    <div class="title-separator row">
        <div class="col">
            <h1>@Model.Value("contentPageTitle")</h1>
        </div>
    </div>
    <div class="row">
        <div class="col">
            @Model.Value("contentPageText")
        </div>
        <div class="col">
            @{
                var typedMultiMediaPicker = Model.Value<IEnumerable<IPublishedContent>>("contentPageImages");
                foreach (var item in typedMultiMediaPicker)
                {
                    <img class="content-page-img" src="@item.Url()" alt="contentPage Image" />
                }
            }
        </div>
    </div>
}
@if (@Model.HasValue("contentPageGrid"))
{
    <script>
        $(document).ready(function () {
            //shows text-box search
            var children = $(".clearfix").children().children().children();

            for (var i = 0; i < children.length; i++) {
                if (!children.eq(i).hasClass("gridDiv") && children.eq(i).prop("tagName") != "H1") {
                    children.eq(i).css("display", "none");
                }
            }

            $(".gridButton").click(function () {

                //console.log($(".gridButton").parent().parent().children());

                //console.log($(".gridButton").parent().siblings().not(".gridDiv"));
                console.log($(this).parent().nextAll());
                console.log($(this).parent().nextAll().not(".gridDiv, .gridDiv ~ p").animate({
                    opacity: "toggle",
                    display: "block",
                    width: "toggle"
                }));

                //$(this).parent().nextAll()[value] - object

                //for (var i = 0; i < $(this).parent().nextAll().length; i++) {
                //    if ($(this).parent().nextAll()[i].getAttribute("class") == null) {
                //        $(this).parent().nextAll().animate({
                //            opacity: "toggle",
                //            display: "block",
                //            width: "toggle"
                //        });
                //    }
                //    else if (!$(this).parent().nextAll()[i].getAttribute("class").endsWith("gridDiv")) {
                //        $(this).parent().nextAll().animate({
                //            opacity: "toggle",
                //            display: "block",
                //            width: "toggle"
                //        });
                //    }
                //    else {
                //        break;
                //    }
                //}

                //for (var i = 0; i < children.length; i++) {
                //    if (!children.eq(i).hasClass("gridDiv") && children.eq(i).prop("tagName") != "H1") {
                //        children.eq(i).animate({
                //            opacity: "toggle",
                //            display: "block",
                //            width: "toggle"
                //        });
                //    }
                //}
            });
        });
    </script>
    @Html.GetGridHtml(Model, "contentPageGrid")
}

@if (Model.Name() == "Sobre nós")
{
    @Html.Action("RenderContactUs", "ContactUs")
}
else
{
    @Html.Partial("Cards/More About Us Card")
}